[0;31mInit signature:[0m [0mIn[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mvariable[0m[0;34m,[0m [0mname[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mvalue[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mupdate[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mmutable[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mstrict[0m[0;34m=[0m[0mFalse[0m[0;34m,[0m [0mallow_downcast[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mautoname[0m[0;34m=[0m[0mTrue[0m[0;34m,[0m [0mimplicit[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mborrow[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mshared[0m[0;34m=[0m[0mFalse[0m[0;34m)[0m[0;34m[0m[0m
[0;31mDocstring:[0m     
Represents a symbolic input for use with function or FunctionMaker.

Parameters
----------
variable : a Variable instance
    This will be assigned a value before running the function, not computed
    from its owner.
name : Any type
    If autoname=True, defaults to variable.name.
    If name is a valid Python identifier, this input can be set by kwarg,
    and its value can be accessed by self.<name>.
value : Any type
    The initial/default value for this input. If update is None,
    this input acts just like an argument with a default value in
    Python. If update is not None, changes to this value will
    "stick around", whether due to an update or a user's explicit
    action.
update : Variable instance
    Defaults to None. Value (see previous) will be replaced with this
    expression variable after each function call. If update is None, the
    update will be the default value of the input.
mutable : bool
    Defaults to False if update is None, True if update is not None.
    True: permit the compiled function to modify the python object
    being passed as the input.
    False: do not permit the compiled function to modify the
    python object being passed as the input.
borrow : bool
    Default : take the same value as mutable.
    True: permit the output of the compiled function to be aliased
    to the input.
    False: do not permit any output to be aliased to the input.
strict : bool
    Defaults to False.
    True: means that the value you pass for this input must have exactly
    the right type.
    False: the value you pass for this input may be cast automatically to
    the proper type.
allow_downcast : bool or None
    Defaults to None. Only applies when `strict` is False.
    True: the value you pass for this input can be silently downcasted to
    fit the right type, which may lose precision.
    False: the value will only be cast to a more general, or precise, type.
    None: Almost like False, but allows downcast of Python floats to floatX.
autoname : bool
    Defaults to True. See the name option.
implicit : bool or None
    Defaults to None.
    True: This input is implicit in the sense that the user is not allowed
    to provide a value for it. Requires 'value' to be set.
    False: The user can provide a value for this input. Be careful when
    'value' is a container, because providing an input value will
    overwrite the content of this container.
    None: Automatically choose between True or False depending on the
    situation. It will be set to False in all cases except if 'value' is a
    container (so that there is less risk of accidentally overwriting its
    content without being aware of it).
[0;31mFile:[0m           ~/.local/lib/python2.7/site-packages/theano/compile/io.py
[0;31mType:[0m           type
